/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package my.hbsgui;

import hbs.Customer;
import hbs.DatePair;
import hbs.HBS;
import hbs.Hotel;
import hbs.Location;
import hbs.Reservation;
import hbs.Room;
import hbs.RoomType;
import java.awt.Component;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumnModel;

/**
 * The GUI to select hotel, type of room and number of rooms
 * @author Shuo Zhang <shuozhang2014@u.northwestern.edu>
 */
public class HotelTable extends javax.swing.JFrame {
	private ArrayList<Customer> customerList;
	private ArrayList<Location> locationList;
	
	private Customer cus;
	private String myCity;
	private DatePair dp;
	
	private ArrayList<Hotel> hotelList;
	
	private String[] roomTypes = {"SINGLE", "DOUBLE", "JUNIORSUITE"};
	private String[] numRooms = {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10"};

	/**
	 * The constructor of HotelTable
	 * @param locationList a list of locations
	 * @param customerList a list of customers
	 * @param cus the current customer
	 * @param myCity location name
	 * @param dp range of dates for this reservation
	 */
    public HotelTable(ArrayList<Location> locationList, ArrayList<Customer> customerList,
		Customer cus, String myCity, DatePair dp) {
		this.locationList = locationList;
		this.customerList = customerList;
		this.cus = cus;
		this.myCity = myCity;
		this.dp = dp;
		
        initComponents();
		
		hotelList = new ArrayList<Hotel>();
		for (int i = 0; i < this.locationList.size(); i++) {
			if (this.myCity.equals(locationList.get(i).getCity())) {
				hotelList = locationList.get(i).getCityHotelDataBase();
			}
		}
		String[] hotels = new String[hotelList.size()];
		for (int i = 0; i < hotelList.size(); i++) {
			hotels[i] = new String(hotelList.get(i).getHotelName());
		}
		
		Object[][] rows = new Object[hotels.length][];
		
		for (int i = 0; i < hotels.length; i++) {	
			rows[i] = new Object[8];
		
			ArrayList<Room> SingleRooms = hotelList.get(i).getFreeRooms(dp, RoomType.SINGLE);
            ArrayList<Room> DoubleRooms = hotelList.get(i).getFreeRooms(dp, RoomType.DOUBLE);
            ArrayList<Room> JSRooms = hotelList.get(i).getFreeRooms(dp, RoomType.JUNIORSUITE);
			
			rows[i][0] = (Object) new Integer(i+1);
			rows[i][1] = (Object) new String(hotelList.get(i).getHotelName());
			rows[i][2] = (Object) new Integer(SingleRooms.size());
			rows[i][3] = (Object) new Double(SingleRooms.get(0).getPrice());
			rows[i][4] = (Object) new Integer(DoubleRooms.size());
			rows[i][5] = (Object) new Double(DoubleRooms.get(0).getPrice());
			rows[i][6] = (Object) new Integer(JSRooms.size());
			rows[i][7] = (Object) new Double(JSRooms.get(0).getPrice());	
		}
		
		final Object headers[] = {"item number", "Hotel Name", "# of Single Rooms", "Single Room Price", "# of Double Rooms",
			"Double Room Price", "# of JS Rooms", "JS Room Price"};	
		
		jTable2.setModel(new javax.swing.table.DefaultTableModel(rows, headers));		
		jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(hotels));
		jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(numRooms));
		jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(roomTypes));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jComboBox2 = new javax.swing.JComboBox();
        jComboBox3 = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "HotelTable", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 24))); // NOI18N

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTable2.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel1.setText("HotelChoice");

        jLabel2.setText("RoomType");

        jLabel3.setText("# of Rooms");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton1.setText("Next");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Quit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 380, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(30, 30, 30))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jButton1, jButton2});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jButton1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton2)))
                .addGap(21, 21, 21))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton1, jButton2});

        pack();
    }// </editor-fold>//GEN-END:initComponents
		/**
		 * Not used
		 * @param evt 
		 */
        private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
                // TODO add your handling code here:
        }//GEN-LAST:event_jComboBox1ActionPerformed

	/**
	 * Quit the program and save states
	 * @param evt click button
	 */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        HBS.writeLocationList("locationDB.dat", locationList);
		HBS.writeCustomerList("customerDB.dat", customerList);
		System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

	/**
	 * Jump to the next GUI to confirm reservation
	 * @param evt click button
	 */
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		int hotelIndex = jComboBox1.getSelectedIndex();
		int numRoomIndex = jComboBox2.getSelectedIndex();
		int roomTypeIndex = jComboBox3.getSelectedIndex();
		
		switch (roomTypeIndex) {
			case 0:
				if (hotelList.get(hotelIndex).getFreeRooms(dp, RoomType.SINGLE).size() < numRoomIndex + 1) {
					JOptionPane.showMessageDialog(this, "Not enough rooms!");
					return;
				}
				break;
			case 1:
				if (hotelList.get(hotelIndex).getFreeRooms(dp, RoomType.DOUBLE).size() < numRoomIndex + 1) {
					JOptionPane.showMessageDialog(this, "Not enough rooms!");
					return;
				}
				break;
			case 2:
				if (hotelList.get(hotelIndex).getFreeRooms(dp, RoomType.JUNIORSUITE).size() < numRoomIndex + 1) {
					JOptionPane.showMessageDialog(this, "Not enough rooms!");
					return;
				}
				break;
			default:
				break;
		}
		
		this.setVisible(false);
		
		HotelTable ref = this;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
				
                new ConfirmReservationGUI(locationList, customerList, 
						cus, myCity, dp, hotelIndex, roomTypeIndex, 
						numRoomIndex, ref).setVisible(true);
            }
        });
		
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JComboBox jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
